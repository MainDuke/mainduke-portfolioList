6. 인터페이스, 추상클래스

-인터페이스는 추상클래스의 일종이다.
-인터페이스 내의 모든 메서드는 내용이 없는  추상 메서드 이다.

	public void aa();//추상메서드는 내용이 없는것.

-추상 클래스는 일부 내용 있는 메서드도 있고,
 내용 없는 추상 메서드도 있다.

-인터페이스의 메서드는 항상 접근제한자가 public 이다.
 (생략하더라도 public 이다.)

-인터페이스의 필드(변수)는 항상 final static 으로 상수만이 허용된다.
 (final static 생략해도 final static 이다.)

	int a=100;     //	final static int a=100;
	a =200; //에러 값 변경 못함.

	참고: 변수를 상수화
	final static int MAX=100;
	MAX=1000; //에러, 값 변경 못함.

-추상 클래스는 추상메서드가 하나 이상 존재해야한다.  ( 예 : Graphics )

추상 클래스는 new 객체 생성 못한다.
왜? 내용 없는 메서드는 호출할 수 없기 때문에.

- 생성자, static 메서드(), private 메서드()는 추상화 될 수 없다. (OCJP 시험)

-final 필드 : 변수를 상수화 (값 변경 불가)
-final 메서드 : 재정의 불가능
-fianl 클래스는 : 확장, 상속 불가능
-final 클래스의 모든 메서드는 final를 명시하지 않아도 
 묵시적으로 finlal로 인식하게 된다.

ex) 일반 메서드
public void disp(){처리내용}

ex) 추상 메서드
public void aa();

================================
인터페이스 형식
================================
interface 인터페이스 이름{
	변수
	리턴형 메서드();
}
================================

interface 사용 : 클래스나 인터페이스에서 상속받아 사용할 수 있다.
		 클래스에서 상속받아 메서드 내용 재정의(오버라이딩)

○사용형식
class 클래스 이름 implements 인터페이스이름
{	
	//메서드 오버라이딩
	public 리턴형 메서드명(){처리내용;}
}
================================
Test01_interface.java 
~~
~~
~~
Test05_Board.java
================================
추상클래스와 인터페이스 의 비교 그림 참조. (문서 폴더 안 그림)
01_java/ch04_controll/문서/ch04_controll.txt


=================================================
제어문 ★★★★
=================================================
if
switch~case
for
while
do~while
break
continue
=================================================
●1. if 형식

if(조건)
 {
	조건이 참일때 처리할 내용;
 }

=================================================
●2. if~else 형식

if(조건)
 {
	조건이 참일때 처리할 내용;
 }
else
 {
	조건이 거짓일때 처리;
 }

=================================================
●3. 다중 if 조건 형식

if(조건)
 {
	조건이 참일때 처리할 내용;
 }
else if(조건2)

 {
	조건2 이 참 일때 처리;
 }
else if(조건3)

 {
	조건3 이 참 일때 처리;
 }
...

else
 {
	조건들이 거짓일때 처리할 내용;
 }

=================================================
●Switch(변수 또는 수식)
{
 case 값 1:
	처리문;
	처리문;
	break; //반드시 써야함.
 case 값 2:
	처리문1;
	처리문2;
	break; //반드시 써야함.
 case 값3
	처리문1;
	처리문2;
	break; //반드시 써야함.
.............

default:
	처리문;//기타사항일때 처리.
	
}

실습 Test05_switch.java

●for
●단일 for문 형식

 for(초기치; 조건(최종치); 증,감치)
{
	반복 처리 할 내용;
	반복 처리 할 내용;
	반복 처리 할 내용;
	....
}
ch04_for/Test01_for.java


=================================================
●다중 for문 형식
=================================================
for(초기치;최종치(조건);증감치)
{
	처리문;
	for(초기치;최종치(조건);증감치)
	{
		처리문;
	}
	
	처리문
}
=================================================
●while 형식

초기값;
while(조건){
처리문; //조건이 참인 동안 반복처리.
}

●for문과 while문의 차이점?
for 최종치를 알고 있을때,
while 최종치를 몰라서 반복 시켜야할때.

=================================================
●do~ while 형식

do{
	처리문;
	증감치;
}while(조건); 



=================================================
실습 : Test01_while.java

●while문과 do~while문의 차이점.
조건이 flase 일때, while문 블럭내용이 한번도 처리를 하지않고
do~while문은 블럭내용을 1번만 처리한다.


●break문 : 반복 loop 블럭을 탈출.
Test05

●continue문 :
	반복 loop의 끝을 만난 것 과 같다.
	다시 반복 수행.

for(초기치;조건;증감치)
{
	처리문;
}
